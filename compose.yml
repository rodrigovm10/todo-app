services:
  postgres_db:
    container_name: postgres_db
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: rvega
      POSTGRES_PASSWORD: isa042023
      POSTGRES_DB: todo
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}']
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1GB
        reservations:
          cpus: '2'
          memory: 1GB

  adminer:
    container_name: adminer
    image: adminer:latest
    restart: always
    depends_on:
      - postgres_db
    ports:
      - 9090:8080
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 500MB
        reservations:
          cpus: '0.15'
          memory: 350MB

  backend:
    container_name: todo-backend
    build:
      context: ./back
      args:
        DB_HOST: ${DB_HOST}
        DB_PORT: ${DB_PORT}
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
        DB_NAME: ${DB_NAME}
        PORT: ${PORT}
    env_file:
      - .env
    ports:
      - ${PORT}:${PORT}
    depends_on:
      postgres_db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.35'
          memory: 500MB
        reservations:
          cpus: '0.25'
          memory: 250MB

  frontend:
    container_name: todo-frontend
    build:
      context: ./front
      args:
        VITE_REACT_API_URL_DEV: ${VITE_REACT_API_URL_DEV}
    env_file:
      - .env
    ports:
      - 5173:5173
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.40'
          memory: 500MB
        reservations:
          cpus: '0.20'
          memory: 250MB
